name: Build and Release

on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.version_check.outputs.changed }}
      version: ${{ steps.version_check.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check version change
        id: version_check
        run: |
          PREV_VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          CURR_VERSION=$(grep '^version = ' Cargo.toml | cut -d'"' -f2)
          CURR_TAG="v${CURR_VERSION}"

          if [ "$PREV_VERSION" != "$CURR_TAG" ]; then
              echo "changed=true" >> $GITHUB_OUTPUT
              echo "version=${CURR_TAG}" >> $GITHUB_OUTPUT
              echo "Version changed from $PREV_VERSION to $CURR_TAG"
          else
              echo "changed=false" >> $GITHUB_OUTPUT
              echo "No version change detected"
          fi

  build-linux:
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'true'
    name: Build Linux Binary
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal

      - name: Build release binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Create archive
        run: |
          VERSION=${{ needs.check-version.outputs.version }}
          VERSION=${VERSION#v}  # Remove 'v' prefix
          mkdir -p release
          cp target/release/rona release/
          cd release
          tar -czvf rona-${VERSION}-linux-x86_64.tar.gz rona
          cd ..

      - name: Generate Release Body
        run: |
          cp .github/workflows/release_body.md release_body.md
          VERSION=${{ needs.check-version.outputs.version }}
          VERSION=${VERSION#v}  # Remove 'v' prefix
          sed -i.bak "s/\${GITHUB_REF#refs\/tags\/v}/${VERSION}/g" release_body.md

      - name: Create and push tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          TAG=${{ needs.check-version.outputs.version }}
          git tag $TAG
          git push origin $TAG

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.check-version.outputs.version }}
          files: release/rona-*-linux-x86_64.tar.gz
          body_path: release_body.md
          generate_release_notes: true
          append_body: true

      - name: Publish to crates.io
        env:
          CRATES_IO_TOKEN: ${{ secrets.CRATES_TOKEN }}
        run: |
          cargo login $CRATES_IO_TOKEN
          cargo publish --dry-run
          cargo publish

  build-macos-intel:
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'true'
    name: Build macOS Intel Binary
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          target: x86_64-apple-darwin

      - name: Build release binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target x86_64-apple-darwin

      - name: Create archive
        run: |
          VERSION=${{ needs.check-version.outputs.version }}
          VERSION=${VERSION#v}  # Remove 'v' prefix
          mkdir -p release
          cp target/x86_64-apple-darwin/release/rona release/
          cd release
          tar -czvf rona-${VERSION}-macos-x86_64.tar.gz rona
          cd ..

      - name: Calculate SHA256
        run: |
          VERSION=${{ needs.check-version.outputs.version }}
          VERSION=${VERSION#v}  # Remove 'v' prefix
          cd release
          SHA256=$(shasum -a 256 rona-${VERSION}-macos-x86_64.tar.gz | cut -d ' ' -f 1)
          echo "SHA256_INTEL=${SHA256}" >> $GITHUB_ENV
          echo "### SHA256 (Intel)"  > sha256.md
          echo '```' >> sha256.md
          echo "${SHA256}  rona-${VERSION}-macos-x86_64.tar.gz" >> sha256.md
          echo '```' >> sha256.md

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.check-version.outputs.version }}
          files: release/rona-*-macos-x86_64.tar.gz
          body_path: release/sha256.md
          append_body: true

  build-macos-arm:
    needs: check-version
    if: needs.check-version.outputs.version_changed == 'true'
    name: Build macOS Apple Silicon Binary
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          target: aarch64-apple-darwin

      - name: Build release binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target aarch64-apple-darwin

      - name: Create archive
        run: |
          VERSION=${{ needs.check-version.outputs.version }}
          VERSION=${VERSION#v}  # Remove 'v' prefix
          mkdir -p release
          cp target/aarch64-apple-darwin/release/rona release/
          cd release
          tar -czvf rona-${VERSION}-macos-arm64.tar.gz rona
          cd ..

      - name: Calculate SHA256
        run: |
          VERSION=${{ needs.check-version.outputs.version }}
          VERSION=${VERSION#v}  # Remove 'v' prefix
          cd release
          SHA256=$(shasum -a 256 rona-${VERSION}-macos-arm64.tar.gz | cut -d ' ' -f 1)
          echo "SHA256_ARM=${SHA256}" >> $GITHUB_ENV
          echo "### SHA256 (Apple Silicon)" > sha256.md
          echo '```' >> sha256.md
          echo "${SHA256}  rona-${VERSION}-macos-arm64.tar.gz" >> sha256.md
          echo '```' >> sha256.md

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.check-version.outputs.version }}
          files: release/rona-*-macos-arm64.tar.gz
          body_path: release/sha256.md
          append_body: true

  notify-homebrew:
    name: Notify Homebrew Tap
    needs: [build-linux, build-macos-intel, build-macos-arm]
    if: needs.check-version.outputs.version_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Check if PR already exists in tap (guard)
        id: guard
        env:
          TAG: ${{ needs.check-version.outputs.version }}
          TOKEN: ${{ secrets.HOMEBREW_RONA_TOKEN }}
        run: |
          OWNER="rona-rs"
          REPO="homebrew-rona"
          HEAD="${OWNER}:bump/rona-${TAG}"
          RES=$(curl -s -H "Authorization: token ${TOKEN}" \
            "https://api.github.com/repos/${OWNER}/${REPO}/pulls?state=open&head=${HEAD}")
          COUNT=$(echo "$RES" | jq 'length')
          if [ "$COUNT" -gt 0 ]; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
            echo "Found existing PR for ${HEAD}, skipping dispatch"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
            echo "No existing PR for ${HEAD}, will dispatch"
          fi
      - name: Dispatch update to homebrew-rona
        if: steps.guard.outputs.exists == 'false'
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.HOMEBREW_RONA_TOKEN }}
          repository: rona-rs/homebrew-rona
          event-type: rona-release
          client-payload: |
            {
              "tag": "${{ needs.check-version.outputs.version }}",
              "tarball_url": "https://github.com/rona-rs/rona/archive/refs/tags/${{ needs.check-version.outputs.version }}.tar.gz"
            }
